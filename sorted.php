<?php
# Функция sort сортирует массив по значениям в порядке возрастания.
$arr = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5];
sort($arr);
print_r($arr);

# Функция rsort сортирует массив по значениям в порядке убывания.
$arr = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5];
rsort($arr);
print_r($arr);

# Функция asort сортирует массив по значениям, сохраняя связь с ключами.
$arr = ['b' => 3, 'a' => 1, 'c' => 4];
asort($arr);
print_r($arr);

# Функция arsort сортирует массив по значениям в порядке убывания, сохраняя связь с ключами.
$arr = ['b' => 3, 'a' => 1, 'c' => 4];
arsort($arr);
print_r($arr);

# Функция ksort сортирует массив по ключам.
$arr = ['b' => 3, 'a' => 1, 'c' => 4];
ksort($arr);
print_r($arr);

# Функция krsort сортирует массив по ключам в порядке убывания.
$arr = ['b' => 3, 'a' => 1, 'c' => 4];
krsort($arr);
print_r($arr);

# Функция usort позволяет использовать пользовательскую функцию для сравнения элементов.
$arr = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5];
usort($arr, function ($a, $b) {
    return $a - $b;
});
print_r($arr);

# Функция uasort позволяет использовать пользовательскую функцию для сравнения элементов по значениям, сохраняя связь с ключами.
$arr = ['b' => 3, 'a' => 1, 'c' => 4];
uasort($arr, function ($a, $b) {
    return $a - $b;
});
print_r($arr);