<?php
/**
 * <<<Принцип единой ответственности>>>
 * Один класс решает одну задачу.
 * - появляется модульность(декомпозиция), читабельность возрастает
 * - проще вносить изменения
 *
 * <<<Принцип открытости и закрытости>>>
 * Сущности должны быть открыты для расширения, но закрыты для изменения.
 * Функционал нужно добавлять не за счет изменения сущностей, а за счет добавления, наследования.
 * - нет необходимости в регрессии
 * -меньше вероятность ошибок
 *
 * <<<Принцип подстановки Барбары Лисков>>>
 * Наследуемые классы должны расширять/дополнять, но не уменьшать/замещать функционал.
 *
 * <<<Принцип разделения интерфейса>>>
 * Програмные сущности не должны зависеть от методов, которые они не используют.
 * - избавляем програмные сущности от методов, которые они не используют
 * - получаем более предсказуемую работу
 * - код становится менее связанным
 *
 * <<<Принцип инверсии зависимости>>>
 * Модули высокого уровня не должны зависеть от модулей более низкого уровня
 * Зависимость должна строится на абстракциях
**/

